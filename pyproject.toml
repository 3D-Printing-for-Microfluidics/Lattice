[build-system]
requires = ["setuptools>=42"]
build-backend = "setuptools.build_meta"

[project]
name = "multiplexed_device_dose_customization"
version = "0.1.0"
description = "Optimize print time by combining non-overlapping images with similar settings"
requires-python = ">=3.9"
dependencies = [
    "pillow",
]

[project.optional-dependencies]
test = [
    "pytest>=6.0",
]

[tool.setuptools.packages.find]
where = ["."]  # Look for packages in the root directory
include = ["src*"]  # Include src and its subpackages

[tool.ruff]
lint.select = ["ALL","D", "E", "F", "I", "S"]
lint.ignore = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".nox",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "venv",
]
line-length = 120
target-version = "py311"

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = [
    "S101", # asserts allowed in tests...
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "INP001", # Tests folder doesn't need to be a module 
    "D100", # Test files don't need an intro docstring 
    "D205", # Allow long single line descriptions
    "ANN201", # Don't worry about return type annotations, we never return anything 
    # The below are debateable
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v"
pythonpath = [
    "."
]
